# Azure Pipeline that deploys the whole infrastructure continuously, using Terraform
trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

variables:
  ARM_CLIENT_ID: $(AZURE_CLIENT_ID)
  ARM_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
  ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
  ARM_TENANT_ID: $(AZURE_TENANT_ID)
  TF_LOG: $(TERRAFORM_LOGLEVEL)

stages:
- stage: 'prepare'
  displayName: 'prepare'
  jobs:
  - job: 'prepare'
    displayName: 'prepare'
    steps:
    - task: Cache@2
      displayName: 'Register TF cache'
      inputs:
        key: terraform | $(Agent.OS) | "$(Build.BuildNumber)" | $(Build.SourceVersion) | $(tfComponent) | "$(tfVarFileName)"
        path: $(tfExecutionDir)
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: $(TERRAFORM_VERSION)
    - task: TerraformTaskV1@0
      displayName: "Run > terraform init"
      inputs:
        command: "init"
        workingDirectory: '$(System.DefaultWorkingDirectory)/terraform/'
        backendAzureRmResourceGroupName: '$(RESOURCE_GROUP_NAME)'
        backendAzureRmStorageAccountName: '$(STORAGE_ACCOUNT_NAME)}'
        backendAzureRmContainerName: '$(STORAGE_CONTAINER_NAME)'