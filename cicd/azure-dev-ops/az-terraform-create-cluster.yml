# Azure Pipeline that deploys the whole infrastructure continuously, using Terraform
trigger:
- none

pool:
  vmImage: 'ubuntu-latest'

variables:
  ARM_CLIENT_ID: ${env:AZURE_CLIENT_ID}
  ARM_CLIENT_SECRET: ${env:AZURE_CLIENT_SECRET}
  ARM_SUBSCRIPTION_ID: ${env:AZURE_SUBSCRIPTION_ID}
  ARM_TENANT_ID: ${env:AZURE_TENANT_ID}
  TF_LOG: ${env:TERRAFORM_LOGLEVEL}

stages:
- stage: 'prepare'
  displayName: 'prepare'
  jobs:
  - job: 'prepare'
    displayName: 'prepare'
    steps:
    - task: Cache@2
      displayName: 'Register TF cache'
      inputs:
        key: terraform | $(Agent.OS) | "$(Build.BuildNumber)" | $(Build.SourceVersion) | $(tfComponent) | "$(tfVarFileName)"
        path: $(tfExecutionDir)
    - task: TerraformInstaller@0
      inputs:
        terraformVersion: $(TERRAFORM_VERSION)
    - script: |
        terraform init -backend-config="resource_group_name=${RESOURCE_GROUP_NAME}" -backend-config="storage_account_name=${STORAGE_ACCOUNT_NAME}" -backend-config="container_name=${STORAGE_CONTAINER_NAME}"
        terraform plan
      workingDirectory: $(system.defaultWorkingDirectory)/terraform
      failOnStderr: true
      displayName: 'terraform validate'